<?php

namespace Tests\Unit;

use App\Models\NIS;
use App\Models\TaxCalculator;
use Illuminate\Foundation\Testing\RefreshDatabase;
use MoneyConfiguration;
use Tests\TestCase;


class TaxCalculatorUnitTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        NIS::factory()->create(
            [
                'effective_date' => '2021-01-01', 'rate_percentage' => '3.0',
                'annual_income_threshold' => MoneyConfiguration::defaultParser()->parse('1500000.00',
                    MoneyConfiguration::defaultCurrency())
            ],
        );
        NIS::factory()->create(
            [
                'effective_date' => '2021-04-01', 'rate_percentage' => '3.0',
                'annual_income_threshold' => MoneyConfiguration::defaultParser()->parse('3000000.00',
                    MoneyConfiguration::defaultCurrency())
            ],
        );
        NIS::factory()->create(
            [
                'effective_date' => '2022-04-01', 'rate_percentage' => '3.0',
                'annual_income_threshold' => MoneyConfiguration::defaultParser()->parse('5000000.00',
                    MoneyConfiguration::defaultCurrency())
            ],
        );
    }

    /** @test */
    public function it_can_calculate_nis()
    {
        $calculator = new TaxCalculator(
            monthlyGross: '100000.00',
        );
        $nisAmount = $calculator->nisAmount();
        $this->assertEquals('3000.00', TaxCalculator::formatAsString($nisAmount));
    }

    /** @test */
    public function it_calculates_nis_respecting_income_threshold()
    {
        $calculator = new TaxCalculator(
            monthlyGross: '264750.00',
        );

        $nisAmount = $calculator->nisAmount();
        $this->assertEquals('7500.00', TaxCalculator::formatAsString($nisAmount));
    }

    /** @test */
    public function it_calculates_nis_for_a_specific_period()
    {
        $calculator = new TaxCalculator(
            monthlyGross: '264750.00',
            date: '2021-02-01' //NIS max was 3750.00
        );

        $nisAmount = $calculator->nisAmount();
        $this->assertEquals('3750.00', TaxCalculator::formatAsString($nisAmount));
    }
}
